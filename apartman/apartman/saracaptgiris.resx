<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        B4ACBDoAFCDQAaAAgQ4ABQh0AChAoANAAQIdAAoQ6ABQgEAHgAIEOgAUINABoACBDgAFCHQAKECgA0AB
        Ah0AChDoAFCAQAeAAgQ6ABQg0AGgAIEOAAUIdAAoQKADQAECHQAKEOgAUIBAB4ACBDoAFCDQAaAAgQ4A
        BQh0AChAoANAAQIdAAoQ6ABQgEAHgAIEOgAUINABoACBDgAFCHQAKECgA0ABAh0AChDoAFCAQAeAAgQ6
        ABQg0AGgAIEOAAUIdAAoQKADQAECHQAKEOgAUIBAB4ACBDoAFCDQAaAAgQ4ABQh0AChAoANAAQIdAAoQ
        6ABQgEAHgAIEOgAUINABoACBDgAFCHQAKECgA0ABAh0AChDoAFCAQAeAAgQ6ABQg0AGgAIEOAAUIdAAo
        QKADQAECHQAKEOgAUIBAB4ACBDoAFCDQAaAAgQ4ABQh0AChAoANAAQIdAAoQ6ABQgEAHgAIEOgAUINAB
        oACBDgAFCHQAKECgA0ABAh0AChDoAFCAQAeAAgQ6ABQg0AGgAIEOAAUIdAAoQKADQAECHQAKEOgAUIBA
        B4ACBDoAFCDQAaAAgQ4ABQh0AChAoANAAQIdAAoQ6ABQgEAHgAIEOgAUINABoACBDgAFCHQAKECgA0AB
        Ah0AChDoAFCAQAeAAgQ6ABQg0AGgAIEOAAUIdAAoQKADQAECHQAKEOgAUIBAB4ACBDoAFCDQAaAAgQ4A
        BQh0AChAoANAAQIdAAoQ6ABQgEAHgAIEOgAUINABoACBDgAFCHQAKECgA0ABAh0AChDoAFCAQAeAAgQ6
        ABQg0AGgAIEOAAUIdAAoQKADQAECHQAKEOgAUIBAB4ACBDoAFCDQAaAAgQ4ABQh0AChAoANAAQIdAAoQ
        6ABQgEAHgAIEOgAUINABoACBDgAFCHQAKECgA0ABAh0AChDoAFCAQAeAAgQ6ABQg0AGgAIEOAAUIdAAo
        QKADQAECHQAKEOgAUIBAB4ACBDoAFCDQAaAAgQ4ABQh0AChAoANAAQIdAAoQ6ABQgEAHgAIEOgAUINAB
        oACBDgBr3t+b/wFLU45Yx+bRKAAAAABJRU5ErkJggg==
</value>
  </data>
</root>