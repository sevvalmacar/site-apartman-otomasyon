<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Dvueelf6f8OGRaAzVUzOiglt2Q9IJibKre8Z11UDPVxy218XbmKTffZs2AQ6QaCTGrosLcpGnaytlVQ5
        0EOsFhhykMWGQaATBDoTYvOXIcvSYolVnM1nba206oE+EqsHsu+CDZNAJwh0xsT179ieNfvRyOx32nz9
        kGwogR6GTFSkNoFOEOjcK2am912WFkEyj8vSNqRAD7GUcLMBM+CpSaATBDoLDj//v9MfiswD33R9c+I9
        QZK1s75taIEezrn+j81WB5gBvyHb97Pz+b/JyhLoNBd8788LPwh9nX39H9J25sFqvH3qunDl7X9vDjrz
        l+n3RX2fvsq+Dwh0AChBoANAAQIdAAoQ6ABQgEAHgAIEOgAUINABoACBDgAFCHQAKECgA0ABAh0AChDo
        AFCAQAeAAgQ6ABQg0AGgAIEOAAUI9Bld9J3/ag4++jMTzrrijrT8NCeff/1EG4d99Iy07GI+8MkvTLQT
        Tv3yzWn5oU658Mbmbe/5aLPzC3Zrtn/S05tHPGrbBdvtsFPzvJe+vjngvcc151z1o7RuH5d//3fp+w8X
        Xv9/0jrTrPnKLWk7bYd+5PTmqBO+2Bx/ztcXvsusneUQn1H2fg758KnNtT/6R1pnmmPXXJa21Rb/S0ef
        dGFz+iW3Nl+7469pO32t5Ht/99GnNO899nPN0SdesPC/99Xv/zZtp+3Sm/9v2tasrrnzb2Ptz1ufj//d
        bjvhI6dekpZfzHuOWZO29YWv/SQtPxJ9qF3+iE+dm5Y7/5t3jZVbSvezpx+BPqNTLrihuc997jNhh52e
        lZbPXH7r75sHP3SriTYe+KB/SctPc8G3f9FstNFGE+2EZzz3ZWmdvk74wjebJz51l7TtrngPz3nRa5rz
        rv1p2tZijjz+vLTNsP9hH0/rTLP/ez+RtrOYx2z/5Obth3+queoHf0rbXFdeuecB6euHz3zpu2mdaZ75
        vJen7Uyz2QMf1Lz6Te9ovvStX6TtLWV9vveN7nvf5qm77Np8+DNfTtsLZ1/5w7TurK781z+OtT9PfT5s
        ve32E+2E+J6H/h9vcv9N07ae/aJXp+VHot+0yz9ym8el5T7xuSvHyi2l+9nTj0Cf0bTOHeKMKKvTtc+7
        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
        ChDoAFCAQAeAAgQ6ABQg0AGgAIEOAAUIdAAoQKADQAECHQAKEOgAUIBAB4ACBDoAFCDQAaAAgQ4ABQh0
        AChAoANAAQIdAAoQ6ABQgEAHgAIEOgAUINABoACBDgAFCHQAKECgA0ABAh0AChDoAFCAQAeAAgQ6ABQg
        0AGgAIEOAAUIdAAoQKADQAECHQAKEOgAUIBAB4ACBDoAFCDQAaAAgQ4ABQh0AChAoANAAQIdAAoQ6ABQ
        gEAHgAIEOgAUINABoACBDgAFCHQAKECgA0ABAh0AChDoAFCAQAeAAgQ6ABQg0AGgAIEOAAUIdAAoQKAD
        QAECHQAKEOgAUIBAB4ACBDoAFCDQAaAAgQ4ABQh0AChAoANAAQIdAAoQ6ABQgEAHgAIEOgAUINABoACB
        DgAFCHQAKECgA0ABAh0AChDoAFCAQAeAAgQ6ABQg0AGgAIEOAAUIdAAoQKADQAECHQAKEOgAUIBAB4AC
        BDoAFCDQAaAAgQ4ABQh0AChAoANAAQIdAAoQ6ABQgEAHgAIEOgAUINABoACBDgAFCHQAKECgA0ABAh0A
        ChDoAFCAQAeAAgQ6ABQg0AGgAIEOAAUIdAAoQKADQAECHQAKEOgAUIBAB4ACBDoAFCDQAaAAgQ4ABQh0
        AChAoANAAQIdAAoQ6ABQgEAHgAIEOgAUINABoACBDgAFCHQAKECgA0ABAh0AChDoAFCAQAeAAgQ6ABQg
        0AGgAIEOAAUIdAAoQKADQAECHQAKEOgAUIBAB4ACBDoAFCDQAaAAgQ4ABQh0AChAoANAAQIdAAoQ6ABQ
        gEAHgAIEOgAUINABoACBDgAFCHQAKECgA0ABAh0AChDoAFCAQAeAAgQ6ABQg0AGgAIEOAAUIdAAoQKAD
        QAECHQAKEOgAUIBAB4ACBDoAFCDQAaAAgQ4ABQh0AChAoANAAQIdAAoQ6ABQgEAHgAIEOgAUINABoACB
        DgCr3j+b/weVtA/jGWPtSwAAAABJRU5ErkJggg==
</value>
  </data>
</root>